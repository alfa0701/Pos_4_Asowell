// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6

using System.Data.Entity;
using POS.Mapping.AdPressMapping;

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace POS.Context
{
    using POS.Entities;
    using POS.Interfaces;
    using POS.Mapping;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    [DbConfigurationType(typeof(AsowellConfiguration))]
    public partial class CloudContext : System.Data.Entity.DbContext, ICloudContext
    {
        public System.Data.Entity.DbSet<AdminRe> AdminRes { get; set; } // AdminRes
        public System.Data.Entity.DbSet<ApplicationLog> ApplicationLogs { get; set; } // ApplicationLog
        public System.Data.Entity.DbSet<Customer> Customers { get; set; } // Customer
        public System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        public System.Data.Entity.DbSet<Ingredient> Ingredients { get; set; } // Ingredient
        public System.Data.Entity.DbSet<OrderNote> OrderNotes { get; set; } // OrderNote
        public System.Data.Entity.DbSet<OrderNoteDetail> OrderNoteDetails { get; set; } // OrderNoteDetails
        public System.Data.Entity.DbSet<Product> Products { get; set; } // Product
        public System.Data.Entity.DbSet<ProductDetail> ProductDetails { get; set; } // ProductDetails
        public System.Data.Entity.DbSet<ReceiptNote> ReceiptNotes { get; set; } // ReceiptNote
        public System.Data.Entity.DbSet<ReceiptNoteDetail> ReceiptNoteDetails { get; set; } // ReceiptNoteDetails
        public System.Data.Entity.DbSet<SalaryNote> SalaryNotes { get; set; } // SalaryNote
        public System.Data.Entity.DbSet<WareHouse> WareHouses { get; set; } // WareHouse
        public System.Data.Entity.DbSet<WorkingHistory> WorkingHistories { get; set; } // WorkingHistory

        static CloudContext()
        {
            System.Data.Entity.Database.SetInitializer(new System.Data.Entity.MigrateDatabaseToLatestVersion<CloudContext, MigrationConfiguration>());
        }

        public CloudContext()
            : base("Name=POSAzureConns")
        {
            InitializePartial();
        }

        public CloudContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public CloudContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public CloudContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public CloudContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AdminReMapping());
            modelBuilder.Configurations.Add(new ApplicationLogMapping());
            modelBuilder.Configurations.Add(new CustomerMapping());
            modelBuilder.Configurations.Add(new EmployeeMapping());
            modelBuilder.Configurations.Add(new IngredientMapping());
            modelBuilder.Configurations.Add(new OrderNoteMapping());
            modelBuilder.Configurations.Add(new OrderNoteDetailMapping());
            modelBuilder.Configurations.Add(new ProductMapping());
            modelBuilder.Configurations.Add(new ProductDetailMapping());
            modelBuilder.Configurations.Add(new ReceiptNoteMapping());
            modelBuilder.Configurations.Add(new ReceiptNoteDetailMapping());
            modelBuilder.Configurations.Add(new SalaryNoteMapping());
            modelBuilder.Configurations.Add(new WareHouseMapping());
            modelBuilder.Configurations.Add(new WorkingHistoryMapping());

            modelBuilder.Configurations.Add(new APWareHouseMapping());
            modelBuilder.Configurations.Add(new StockMapping());
            modelBuilder.Configurations.Add(new StockInMapping());
            modelBuilder.Configurations.Add(new StockInDetailsMapping());
            modelBuilder.Configurations.Add(new StockOutMapping());
            modelBuilder.Configurations.Add(new StockOutDetailsMapping());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AdminReMapping(schema));
            modelBuilder.Configurations.Add(new ApplicationLogMapping(schema));
            modelBuilder.Configurations.Add(new CustomerMapping(schema));
            modelBuilder.Configurations.Add(new EmployeeMapping(schema));
            modelBuilder.Configurations.Add(new IngredientMapping(schema));
            modelBuilder.Configurations.Add(new OrderNoteMapping(schema));
            modelBuilder.Configurations.Add(new OrderNoteDetailMapping(schema));
            modelBuilder.Configurations.Add(new ProductMapping(schema));
            modelBuilder.Configurations.Add(new ProductDetailMapping(schema));
            modelBuilder.Configurations.Add(new ReceiptNoteMapping(schema));
            modelBuilder.Configurations.Add(new ReceiptNoteDetailMapping(schema));
            modelBuilder.Configurations.Add(new SalaryNoteMapping(schema));
            modelBuilder.Configurations.Add(new WareHouseMapping(schema));
            modelBuilder.Configurations.Add(new WorkingHistoryMapping(schema));

            modelBuilder.Configurations.Add(new APWareHouseMapping(schema));
            modelBuilder.Configurations.Add(new StockMapping(schema));
            modelBuilder.Configurations.Add(new StockInMapping(schema));
            modelBuilder.Configurations.Add(new StockInDetailsMapping(schema));
            modelBuilder.Configurations.Add(new StockOutMapping(schema));
            modelBuilder.Configurations.Add(new StockOutDetailsMapping(schema));

            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
// </auto-generated>
