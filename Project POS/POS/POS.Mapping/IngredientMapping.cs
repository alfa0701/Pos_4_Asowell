// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace POS.Mapping
{
    using POS.Entities;

    // Ingredient
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class IngredientMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ingredient>
    {
        public IngredientMapping()
            : this("dbo")
        {
        }

        public IngredientMapping(string schema)
        {
            ToTable("Ingredient", schema);
            HasKey(x => x.IgdId);

            Property(x => x.IgdId).HasColumnName(@"igd_id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.WarehouseId).HasColumnName(@"warehouse_id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Info).HasColumnName(@"info").HasColumnType("nvarchar").IsOptional().HasMaxLength(300);
            Property(x => x.Usefor).HasColumnName(@"usefor").HasColumnType("tinyint").IsRequired();
            Property(x => x.IgdType).HasColumnName(@"igd_type").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.UnitBuy).HasColumnName(@"unit_buy").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.StandardPrice).HasColumnName(@"standard_price").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Deleted).HasColumnName(@"deleted").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.WareHouse).WithMany(b => b.Ingredients).HasForeignKey(c => c.WarehouseId).WillCascadeOnDelete(false); // fk_warehouseid
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
