// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace POS.Mapping
{
    using POS.Entities;

    // ReceiptNote
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class ReceiptNoteMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReceiptNote>
    {
        public ReceiptNoteMapping()
            : this("dbo")
        {
        }

        public ReceiptNoteMapping(string schema)
        {
            ToTable("ReceiptNote", schema);
            HasKey(x => x.RnId);

            Property(x => x.RnId).HasColumnName(@"rn_id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmpId).HasColumnName(@"emp_id").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Inday).HasColumnName(@"inday").HasColumnType("date").IsRequired();
            Property(x => x.TotalAmount).HasColumnName(@"total_amount").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasOptional(a => a.Employee).WithMany(b => b.ReceiptNotes).HasForeignKey(c => c.EmpId).WillCascadeOnDelete(false); // FK_dbo.ReceiptNote_dbo.Employee_emp_id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
