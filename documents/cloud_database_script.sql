create database DBpos
go

use DBpos
go



CREATE TABLE [dbo].[AdminRes] (
    [ad_id] [varchar](10) NOT NULL,
    [username] [varchar](50) NOT NULL,
    [pass] [varchar](max) NOT NULL,
    [name] [varchar](50) NOT NULL,
    [ad_role] [int] NOT NULL,
    CONSTRAINT [PK_dbo.AdminRes] PRIMARY KEY ([ad_id])
)
CREATE TABLE [dbo].[Employee] (
    [emp_id] [varchar](10) NOT NULL,
    [emp_code] [varchar](max),
    [manager] [varchar](10) NOT NULL,
    [username] [varchar](50) NOT NULL,
    [pass] [varchar](max) NOT NULL,
    [name] [nvarchar](50) NOT NULL,
    [birth] [date] NOT NULL,
    [startday] [date] NOT NULL,
    [hour_wage] [int] NOT NULL,
    [addr] [nvarchar](200),
    [email] [varchar](100),
    [phone] [varchar](20),
    [emp_role] [int] NOT NULL,
    [deleted] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Employee] PRIMARY KEY ([emp_id])
)
CREATE INDEX [IX_manager] ON [dbo].[Employee]([manager])
CREATE TABLE [dbo].[OrderNote] (
    [ordernote_id] [varchar](10) NOT NULL,
    [pay_method] [int] NOT NULL,
    [sale_value] [money] NOT NULL,
    [totalPrice_nonDisc] [money] NOT NULL,
    [Svc] [money] NOT NULL,
    [Vat] [money] NOT NULL,
    [subEmp_id] [varchar](200),
    [discount] [int] NOT NULL,
    [Pax] [int] NOT NULL,
    [cus_id] [varchar](10),
    [emp_id] [varchar](10),
    [ordertable] [int] NOT NULL,
    [ordertime] [datetime] NOT NULL,
    [total_price] [money] NOT NULL,
    [customer_pay] [money] NOT NULL,
    [pay_back] [money] NOT NULL,
    CONSTRAINT [PK_dbo.OrderNote] PRIMARY KEY ([ordernote_id])
)
CREATE INDEX [IX_cus_id] ON [dbo].[OrderNote]([cus_id])
CREATE INDEX [IX_emp_id] ON [dbo].[OrderNote]([emp_id])
CREATE TABLE [dbo].[Customer] (
    [cus_id] [varchar](10) NOT NULL,
    [name] [nvarchar](50) NOT NULL,
    [phone] [varchar](20),
    [email] [varchar](100),
    [discount] [int] NOT NULL,
    [deleted] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Customer] PRIMARY KEY ([cus_id])
)
CREATE TABLE [dbo].[OrderNoteDetails] (
    [ordernote_id] [varchar](10) NOT NULL,
    [product_id] [varchar](10) NOT NULL,
    [discount] [int] NOT NULL,
    [quan] [int] NOT NULL,
    CONSTRAINT [PK_dbo.OrderNoteDetails] PRIMARY KEY ([ordernote_id], [product_id])
)
CREATE INDEX [IX_ordernote_id] ON [dbo].[OrderNoteDetails]([ordernote_id])
CREATE INDEX [IX_product_id] ON [dbo].[OrderNoteDetails]([product_id])
CREATE TABLE [dbo].[Product] (
    [product_id] [varchar](10) NOT NULL,
    [name] [nvarchar](50) NOT NULL,
    [info] [nvarchar](100),
    [price] [money] NOT NULL,
    [type] [int] NOT NULL,
    [deleted] [int] NOT NULL,
    [ImageLink] [nvarchar](max),
    [Discount] [int] NOT NULL,
    [std_stats] [nvarchar](50) NOT NULL,
    CONSTRAINT [PK_dbo.Product] PRIMARY KEY ([product_id])
)
CREATE TABLE [dbo].[ProductDetails] (
    [pdetail_id] [varchar](10) NOT NULL,
    [product_id] [varchar](10) NOT NULL,
    [igd_id] [varchar](10) NOT NULL,
    [quan] [float] NOT NULL,
    [unit_use] [nvarchar](100) NOT NULL,
    CONSTRAINT [PK_dbo.ProductDetails] PRIMARY KEY ([pdetail_id])
)
CREATE INDEX [IX_product_id] ON [dbo].[ProductDetails]([product_id])
CREATE INDEX [IX_igd_id] ON [dbo].[ProductDetails]([igd_id])
CREATE TABLE [dbo].[Ingredient] (
    [igd_id] [varchar](10) NOT NULL,
    [warehouse_id] [varchar](10) NOT NULL,
    [name] [nvarchar](100) NOT NULL,
    [info] [nvarchar](300),
    [usefor] [tinyint] NOT NULL,
    [igd_type] [nvarchar](100) NOT NULL,
    [unit_buy] [nvarchar](100) NOT NULL,
    [standard_price] [money] NOT NULL,
    [deleted] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Ingredient] PRIMARY KEY ([igd_id])
)
CREATE INDEX [IX_warehouse_id] ON [dbo].[Ingredient]([warehouse_id])
CREATE TABLE [dbo].[ReceiptNoteDetails] (
    [rn_id] [varchar](10) NOT NULL,
    [igd_id] [varchar](10) NOT NULL,
    [quan] [float] NOT NULL,
    [item_price] [money] NOT NULL,
    [note] [nvarchar](1000),
    CONSTRAINT [PK_dbo.ReceiptNoteDetails] PRIMARY KEY ([rn_id], [igd_id])
)
CREATE INDEX [IX_rn_id] ON [dbo].[ReceiptNoteDetails]([rn_id])
CREATE INDEX [IX_igd_id] ON [dbo].[ReceiptNoteDetails]([igd_id])
CREATE TABLE [dbo].[ReceiptNote] (
    [rn_id] [varchar](10) NOT NULL,
    [emp_id] [varchar](10),
    [inday] [date] NOT NULL,
    [total_amount] [money] NOT NULL,
    CONSTRAINT [PK_dbo.ReceiptNote] PRIMARY KEY ([rn_id])
)
CREATE INDEX [IX_emp_id] ON [dbo].[ReceiptNote]([emp_id])
CREATE TABLE [dbo].[WareHouse] (
    [warehouse_id] [varchar](10) NOT NULL,
    [contain] [float],
    [std_contain] [float] NOT NULL,
    CONSTRAINT [PK_dbo.WareHouse] PRIMARY KEY ([warehouse_id])
)
CREATE TABLE [dbo].[SalaryNote] (
    [sn_id] [varchar](10) NOT NULL,
    [emp_id] [varchar](10) NOT NULL,
    [date_pay] [datetime],
    [salary_value] [money] NOT NULL,
    [work_hour] [float] NOT NULL,
    [for_month] [int] NOT NULL,
    [for_year] [int] NOT NULL,
    [is_paid] [tinyint] NOT NULL,
    CONSTRAINT [PK_dbo.SalaryNote] PRIMARY KEY ([sn_id])
)
CREATE INDEX [IX_emp_id] ON [dbo].[SalaryNote]([emp_id])
CREATE TABLE [dbo].[WorkingHistory] (
    [wh_id] [varchar](10) NOT NULL,
    [result_salary] [varchar](10),
    [emp_id] [varchar](10),
    [startTime] [datetime] NOT NULL,
    [endTime] [datetime] NOT NULL,
    CONSTRAINT [PK_dbo.WorkingHistory] PRIMARY KEY ([wh_id])
)
CREATE INDEX [IX_result_salary] ON [dbo].[WorkingHistory]([result_salary])
CREATE INDEX [IX_emp_id] ON [dbo].[WorkingHistory]([emp_id])
CREATE TABLE [dbo].[StockIn] (
    [si_id] [varchar](10) NOT NULL,
    [ad_id] [varchar](10),
    [intime] [datetime] NOT NULL,
    [total_amount] [money] NOT NULL,
    CONSTRAINT [PK_dbo.StockIn] PRIMARY KEY ([si_id])
)
CREATE INDEX [IX_ad_id] ON [dbo].[StockIn]([ad_id])
CREATE TABLE [dbo].[StockInDetails] (
    [si_id] [varchar](10) NOT NULL,
    [sto_id] [varchar](10) NOT NULL,
    [quan] [float] NOT NULL,
    [item_price] [money] NOT NULL,
    [note] [nvarchar](1000),
    CONSTRAINT [PK_dbo.StockInDetails] PRIMARY KEY ([si_id], [sto_id])
)
CREATE INDEX [IX_si_id] ON [dbo].[StockInDetails]([si_id])
CREATE INDEX [IX_sto_id] ON [dbo].[StockInDetails]([sto_id])
CREATE TABLE [dbo].[Stock] (
    [sto_id] [varchar](10) NOT NULL,
    [apwarehouse_id] [varchar](10) NOT NULL,
    [name] [nvarchar](100) NOT NULL,
    [group] [int] NOT NULL,
    [barter_code] [varchar](max) NOT NULL,
    [barter_name] [varchar](max) NOT NULL,
    [unit_in] [nvarchar](100) NOT NULL,
    [unit_out] [nvarchar](100) NOT NULL,
    [standard_price] [money] NOT NULL,
    [info] [nvarchar](500),
    [supplier] [nvarchar](500),
    [deleted] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Stock] PRIMARY KEY ([sto_id])
)
CREATE INDEX [IX_apwarehouse_id] ON [dbo].[Stock]([apwarehouse_id])
CREATE TABLE [dbo].[APWareHouse] (
    [apwarehouse_id] [varchar](10) NOT NULL,
    [name] [nvarchar](500) NOT NULL,
    [contain] [float],
    [std_contain] [float] NOT NULL,
    CONSTRAINT [PK_dbo.APWareHouse] PRIMARY KEY ([apwarehouse_id])
)
CREATE TABLE [dbo].[StockOutDetails] (
    [stockout_id] [varchar](10) NOT NULL,
    [stock_id] [varchar](10) NOT NULL,
    [discount] [int] NOT NULL,
    [quan] [int] NOT NULL,
    CONSTRAINT [PK_dbo.StockOutDetails] PRIMARY KEY ([stockout_id], [stock_id])
)
CREATE INDEX [IX_stockout_id] ON [dbo].[StockOutDetails]([stockout_id])
CREATE INDEX [IX_stock_id] ON [dbo].[StockOutDetails]([stock_id])
CREATE TABLE [dbo].[StockOut] (
    [stockout_id] [varchar](10) NOT NULL,
    [ad_id] [varchar](10),
    [outTime] [date] NOT NULL,
    [Vat] [money] NOT NULL,
    [discount] [int] NOT NULL,
    [total_amount] [money] NOT NULL,
    CONSTRAINT [PK_dbo.StockOut] PRIMARY KEY ([stockout_id])
)
CREATE INDEX [IX_ad_id] ON [dbo].[StockOut]([ad_id])
CREATE TABLE [dbo].[ApplicationLog] (
    [id] [int] NOT NULL IDENTITY,
    [date_added] [datetime] NOT NULL,
    [comment] [ntext] NOT NULL,
    [application_name] [nvarchar](100),
    [last_updated_on] rowversion NOT NULL,
    [extra_data] [xml],
    CONSTRAINT [PK_dbo.ApplicationLog] PRIMARY KEY ([id])
)
ALTER TABLE [dbo].[Employee] ADD CONSTRAINT [FK_dbo.Employee_dbo.AdminRes_manager] FOREIGN KEY ([manager]) REFERENCES [dbo].[AdminRes] ([ad_id])
ALTER TABLE [dbo].[OrderNote] ADD CONSTRAINT [FK_dbo.OrderNote_dbo.Customer_cus_id] FOREIGN KEY ([cus_id]) REFERENCES [dbo].[Customer] ([cus_id])
ALTER TABLE [dbo].[OrderNote] ADD CONSTRAINT [FK_dbo.OrderNote_dbo.Employee_emp_id] FOREIGN KEY ([emp_id]) REFERENCES [dbo].[Employee] ([emp_id])
ALTER TABLE [dbo].[OrderNoteDetails] ADD CONSTRAINT [FK_dbo.OrderNoteDetails_dbo.OrderNote_ordernote_id] FOREIGN KEY ([ordernote_id]) REFERENCES [dbo].[OrderNote] ([ordernote_id])
ALTER TABLE [dbo].[OrderNoteDetails] ADD CONSTRAINT [FK_dbo.OrderNoteDetails_dbo.Product_product_id] FOREIGN KEY ([product_id]) REFERENCES [dbo].[Product] ([product_id])
ALTER TABLE [dbo].[ProductDetails] ADD CONSTRAINT [FK_dbo.ProductDetails_dbo.Ingredient_igd_id] FOREIGN KEY ([igd_id]) REFERENCES [dbo].[Ingredient] ([igd_id])
ALTER TABLE [dbo].[ProductDetails] ADD CONSTRAINT [FK_dbo.ProductDetails_dbo.Product_product_id] FOREIGN KEY ([product_id]) REFERENCES [dbo].[Product] ([product_id])
ALTER TABLE [dbo].[Ingredient] ADD CONSTRAINT [FK_dbo.Ingredient_dbo.WareHouse_warehouse_id] FOREIGN KEY ([warehouse_id]) REFERENCES [dbo].[WareHouse] ([warehouse_id])
ALTER TABLE [dbo].[ReceiptNoteDetails] ADD CONSTRAINT [FK_dbo.ReceiptNoteDetails_dbo.Ingredient_igd_id] FOREIGN KEY ([igd_id]) REFERENCES [dbo].[Ingredient] ([igd_id])
ALTER TABLE [dbo].[ReceiptNoteDetails] ADD CONSTRAINT [FK_dbo.ReceiptNoteDetails_dbo.ReceiptNote_rn_id] FOREIGN KEY ([rn_id]) REFERENCES [dbo].[ReceiptNote] ([rn_id])
ALTER TABLE [dbo].[ReceiptNote] ADD CONSTRAINT [FK_dbo.ReceiptNote_dbo.Employee_emp_id] FOREIGN KEY ([emp_id]) REFERENCES [dbo].[Employee] ([emp_id])
ALTER TABLE [dbo].[SalaryNote] ADD CONSTRAINT [FK_dbo.SalaryNote_dbo.Employee_emp_id] FOREIGN KEY ([emp_id]) REFERENCES [dbo].[Employee] ([emp_id])
ALTER TABLE [dbo].[WorkingHistory] ADD CONSTRAINT [FK_dbo.WorkingHistory_dbo.Employee_emp_id] FOREIGN KEY ([emp_id]) REFERENCES [dbo].[Employee] ([emp_id])
ALTER TABLE [dbo].[WorkingHistory] ADD CONSTRAINT [FK_dbo.WorkingHistory_dbo.SalaryNote_result_salary] FOREIGN KEY ([result_salary]) REFERENCES [dbo].[SalaryNote] ([sn_id])
ALTER TABLE [dbo].[StockIn] ADD CONSTRAINT [FK_dbo.StockIn_dbo.AdminRes_ad_id] FOREIGN KEY ([ad_id]) REFERENCES [dbo].[AdminRes] ([ad_id])
ALTER TABLE [dbo].[StockInDetails] ADD CONSTRAINT [FK_dbo.StockInDetails_dbo.Stock_sto_id] FOREIGN KEY ([sto_id]) REFERENCES [dbo].[Stock] ([sto_id])
ALTER TABLE [dbo].[StockInDetails] ADD CONSTRAINT [FK_dbo.StockInDetails_dbo.StockIn_si_id] FOREIGN KEY ([si_id]) REFERENCES [dbo].[StockIn] ([si_id])
ALTER TABLE [dbo].[Stock] ADD CONSTRAINT [FK_dbo.Stock_dbo.APWareHouse_apwarehouse_id] FOREIGN KEY ([apwarehouse_id]) REFERENCES [dbo].[APWareHouse] ([apwarehouse_id])
ALTER TABLE [dbo].[StockOutDetails] ADD CONSTRAINT [FK_dbo.StockOutDetails_dbo.Stock_stock_id] FOREIGN KEY ([stock_id]) REFERENCES [dbo].[Stock] ([sto_id])
ALTER TABLE [dbo].[StockOutDetails] ADD CONSTRAINT [FK_dbo.StockOutDetails_dbo.StockOut_stockout_id] FOREIGN KEY ([stockout_id]) REFERENCES [dbo].[StockOut] ([stockout_id])
ALTER TABLE [dbo].[StockOut] ADD CONSTRAINT [FK_dbo.StockOut_dbo.AdminRes_ad_id] FOREIGN KEY ([ad_id]) REFERENCES [dbo].[AdminRes] ([ad_id])
CREATE TABLE [dbo].[__MigrationHistory] (
    [MigrationId] [nvarchar](150) NOT NULL,
    [ContextKey] [nvarchar](300) NOT NULL,
    [Model] [varbinary](max) NOT NULL,
    [ProductVersion] [nvarchar](32) NOT NULL,
    CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
)
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201712140624320_initdatabase', N'POS.Context.MigrationConfiguration',  







--delete [ApplicationLog]
--delete [WorkingHistory]
--delete [SalaryNote]
--delete [ReceiptNoteDetails]
--delete [ProductDetails]
--delete [OrderNoteDetails]
--delete [ReceiptNote]
--delete [Ingredient]
--delete [WareHouse]
--delete [Product]
--delete [OrderNote]
--delete [Customer]
--delete [Employee]
--delete [AdminRes]
--delete [__MigrationHistory]

--drop table [ApplicationLog]
--drop table [WorkingHistory]
--drop table [SalaryNote]
--drop table [ReceiptNoteDetails]
--drop table [ProductDetails]
--drop table [OrderNoteDetails]
--drop table [ReceiptNote]
--drop table [Ingredient]
--drop table [WareHouse]
--drop table [Product]
--drop table [OrderNote]
--drop table [Customer]
--drop table [Employee]
--drop table [AdminRes]
--drop table [__MigrationHistory]